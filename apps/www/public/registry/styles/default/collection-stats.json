{
  "name": "collection-stats",
  "registryDependencies": [
    "card",
    "loading"
  ],
  "files": [
    {
      "name": "collection-stats.tsx",
      "content": "import { useEffect, useState } from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\n\n\nimport { cn } from \"@/lib/utils\";\n\n\n\nimport { Card, CardContent, CardHeader } from \"./card\";\nimport Loading from \"./loading\";\n\n\nconst collectionStatsVariants = cva(\n  \"inline-flex flex-col rounded-lg border p-4 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default: \"border-gray-200 bg-white text-black hover:bg-gray-50\",\n        dark: \"border-gray-700 bg-gray-800 text-white hover:bg-gray-700\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\ninterface CollectionStatsProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof collectionStatsVariants> {\n  collectionName: string\n  limit?: number\n}\n\nconst Stat = ({ title, value }: { title: string; value: string }) => {\n  return (\n    <div>\n      <p className=\"font-semibold text-black dark:text-white\">{value}</p>\n      <p className=\"text-gray-600 dark:text-gray-300\">{title}</p>\n    </div>\n  )\n}\n\nconst CollectionStats = ({\n  className,\n  variant,\n  collectionName,\n  ...props\n}: CollectionStatsProps) => {\n  const [collectionStats, setCollectionStats] = useState<any>(null)\n\n  const [loading, setLoading] = useState(false)\n  useEffect(() => {\n    setLoading(true)\n    const cacheKeyPrefix = `collectionData-stats`\n    const cachedKey = `${cacheKeyPrefix}-${collectionName}`\n    const fetchCollectionData = async () => {\n      const cachedData = sessionStorage.getItem(cachedKey)\n      if (cachedData) {\n        setCollectionStats(JSON.parse(cachedData))\n      } else {\n        let url = `https://solanaapi.nftscan.com/api/sol/statistics/collection/${collectionName}`\n\n        try {\n          const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"*/*\",\n              \"X-API-KEY\": process.env.NEXT_PUBLIC_NFTSCAN_KEY!,\n            },\n          })\n          const jsonData = await response.json()\n          if (jsonData.code === 200) {\n            try {\n              sessionStorage.setItem(cachedKey, JSON.stringify(jsonData.data))\n            } catch (e) {\n              clearCache(cacheKeyPrefix)\n              sessionStorage.setItem(cachedKey, JSON.stringify(jsonData.data))\n            }\n            setCollectionStats(jsonData.data)\n          } else {\n            console.error(\"Failed to fetch collection data:\", jsonData.message)\n          }\n        } catch (error) {\n          console.error(\"Error fetching collection data:\", error)\n        }\n      }\n      setLoading(false)\n    }\n\n    fetchCollectionData()\n  }, [collectionName])\n\n  const clearCache = (prefix: string) => {\n    for (let i = 0; i < sessionStorage.length; i++) {\n      const key = sessionStorage.key(i)\n      if (key && key.startsWith(prefix)) {\n        sessionStorage.removeItem(key)\n      }\n    }\n  }\n\n  return (\n    <div>\n      {loading || !collectionStats ? (\n        <Loading />\n      ) : (\n        <Card key=\"1\" className=\"max-w-sm  text-white rounded-xl shadow-md  \">\n          <CardHeader\n            className=\"flex items-center justify-between p-4 border-b border-gray-600 bg-contain h-[100px]\"\n            style={{ backgroundImage: `url(${collectionStats.logo_url})` }}\n          />\n          <CardContent className=\"p-4\">\n            <h2 className=\"text-lg font-bold\">{collectionStats.collection}</h2>\n            <div className=\"grid grid-cols-2 gap-4 mt-4 text-sm\">\n              <Stat\n                title=\"Lowest Price (24h)\"\n                value={collectionStats.lowest_price_24h}\n              />\n              <Stat\n                title=\"Average Price (24h)\"\n                value={collectionStats.average_price_24h.toFixed(2)}\n              />\n              <Stat title=\"Sales (24h)\" value={collectionStats.sales_24h} />\n              <Stat\n                title=\"Highest Price\"\n                value={collectionStats.highest_price}\n              />\n              <Stat\n                title=\"Volume (24h)\"\n                value={collectionStats.volume_24h.toFixed(3)}\n              />\n              <Stat\n                title=\"Total Volume\"\n                value={collectionStats.total_volume.toLocaleString()}\n              />\n              <Stat title=\"Owners\" value={collectionStats.owners_total} />\n              <Stat title=\"Items\" value={collectionStats.items_total} />\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\nCollectionStats.displayName = \"CollectionStats\"\nexport { CollectionStats, collectionStatsVariants }"
    }
  ],
  "type": "components:ui"
}