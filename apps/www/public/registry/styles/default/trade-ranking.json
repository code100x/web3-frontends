{
  "name": "trade-ranking",
  "dependencies": [
    "loading"
  ],
  "files": [
    {
      "name": "trade-ranking.tsx",
      "content": "import { useEffect, useState } from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\n\n\nimport { cn } from \"@/lib/utils\";\n\n\n\nimport { Card, CardContent, CardHeader } from \"./card\";\nimport Loading from \"./loading\";\n\n\nconst tradeRankingVariants = cva(\n  \"inline-flex flex-col rounded-lg border p-4 transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default: \"border-gray-200 bg-white text-black hover:bg-gray-50\",\n        dark: \"border-gray-700 bg-gray-800 text-white hover:bg-gray-700\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\ninterface TradeRankingProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof tradeRankingVariants> {\n  time?: \"1d\" | \"15m\" | \"30m\" | \"1h\" | \"6h\" | \"12h\"\n  sortBy?: \"volume\" | \"sales\"\n  sort_order?: \"asc\" | \"desc\"\n}\n\nconst TradeRanking = ({\n  className,\n  variant,\n  time = \"1d\",\n  sortBy = \"volume\",\n  sort_order = \"desc\",\n  ...props\n}: TradeRankingProps) => {\n  const [tradeRanking, setTradeRanking] = useState<any>(null)\n\n  const [loading, setLoading] = useState(false)\n  useEffect(() => {\n    setLoading(true)\n    const cacheKeyPrefix = `tradingRanking`\n    const cachedKey = `${cacheKeyPrefix}-${time}-${sortBy}-${sort_order}`\n    const fetchCollectionData = async () => {\n      const cachedData = sessionStorage.getItem(cachedKey)\n      if (cachedData) {\n        setTradeRanking(JSON.parse(cachedData))\n      } else {\n        let url = `https://solanaapi.nftscan.com/api/sol/statistics/ranking/trade?time=${time}&sort_field=${sortBy}&sort_direction=${sort_order}`\n\n        try {\n          const response = await fetch(url, {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Accept: \"*/*\",\n              \"X-API-KEY\": process.env.NEXT_PUBLIC_NFTSCAN_KEY!,\n            },\n          })\n          const jsonData = await response.json()\n          if (jsonData.code === 200) {\n            try {\n              sessionStorage.setItem(cachedKey, JSON.stringify(jsonData.data))\n            } catch (e) {\n              clearCache(cacheKeyPrefix)\n              sessionStorage.setItem(cachedKey, JSON.stringify(jsonData.data))\n            }\n            setTradeRanking(jsonData.data)\n          } else {\n            console.error(\"Failed to fetch collection data:\", jsonData.message)\n          }\n        } catch (error) {\n          console.error(\"Error fetching collection data:\", error)\n        }\n      }\n      setLoading(false)\n    }\n\n    fetchCollectionData()\n  }, [sortBy, sort_order, time])\n\n  const clearCache = (prefix: string) => {\n    for (let i = 0; i < sessionStorage.length; i++) {\n      const key = sessionStorage.key(i)\n      if (key && key.startsWith(prefix)) {\n        sessionStorage.removeItem(key)\n      }\n    }\n  }\n\n  return (\n    <div>\n      {loading || !tradeRanking ? (\n        <Loading />\n      ) : (\n        <div className=\"overflow-auto border sm:rounded-lg\">\n          <table className=\"min-w-full\">\n            <thead>\n              <tr className=\"border-b text-sm font-medium text-gray-500 dark:text-gray-400\">\n                <th className=\"px-4 py-3\">Collection</th>\n                <th className=\"px-4 py-3\">Lowest Price</th>\n                <th className=\"px-4 py-3\">Average Price</th>\n                <th className=\"px-4 py-3\">Highest Price</th>\n                <th className=\"px-4 py-3\">Volume</th>\n                <th className=\"px-4 py-3\">Sales</th>\n                <th className=\"px-4 py-3\">Mint Price Total</th>\n                <th className=\"px-4 py-3\">Mint Gas Fee</th>\n                <th className=\"px-4 py-3\">Items Total</th>\n                <th className=\"px-4 py-3\">Owners Total</th>\n                <th className=\"px-4 py-3\">Volume Change</th>\n                <th className=\"px-4 py-3\">Average Price Change</th>\n                <th className=\"px-4 py-3\">Market Cap</th>\n                <th className=\"px-4 py-3\">Market Trend</th>\n                <th className=\"px-4 py-3\">Mint Average Price</th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200 dark:divide-gray-800\">\n              {tradeRanking.map((collection: any) => (\n                <tr className=\"text-gray-500 dark:text-gray-400\">\n                  <td className=\"flex items-center gap-4 px-4 py-3\">\n                    {collection.logo_url && (\n                      <img\n                        alt={collection.collection}\n                        className=\"rounded-full\"\n                        height=\"40\"\n                        src={`https://images.hsingh.site/?url=${collection.logo_url}&output=webp&width=40&q=80w=40&h=40`}\n                        style={{\n                          aspectRatio: \"40/40\",\n                          objectFit: \"cover\",\n                        }}\n                        width=\"40\"\n                      />\n                    )}\n                    {collection.collection}\n                  </td>\n                  <td className=\"px-4 py-3\">{collection.lowest_price}</td>\n                  <td className=\"px-4 py-3\">{collection.average_price}</td>\n                  <td className=\"px-4 py-3\">{collection.highest_price}</td>\n                  <td className=\"px-4 py-3\">{collection.volume}</td>\n                  <td className=\"px-4 py-3\">{collection.sales}</td>\n\n                  <td className=\"px-4 py-3\">{collection.mint_price_total}</td>\n                  <td className=\"px-4 py-3\">{collection.mint_gas_fee}</td>\n                  <td className=\"px-4 py-3\">{collection.items_total}</td>\n                  <td className=\"px-4 py-3\">{collection.owners_total}</td>\n                  <td className=\"px-4 py-3\">{collection.volume_change}</td>\n                  <td className=\"px-4 py-3\">{collection.average_price_change}</td>\n                  <td className=\"px-4 py-3\">{collection.market_cap}</td>\n                  <td className=\"px-4 py-3\">{collection.market_trend}</td>\n                  <td className=\"px-4 py-3\">{collection.mint_average_price}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  )\n}\nTradeRanking.displayName = \"TradeRanking\"\nexport { TradeRanking, tradeRankingVariants }"
    }
  ],
  "type": "components:ui"
}